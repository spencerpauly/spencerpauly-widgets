{
  "root": true, // Make sure eslint picks up the config at the root of the directory
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020, // Use the latest ecmascript standard
    "sourceType": "module", // Allows using import/export statements
    "ecmaFeatures": {
      "jsx": true // Enable JSX since we're using React
    }
  },
  "settings": {
    "react": {
      "version": "detect" // Automatically detect the react version
    }
  },
  "env": {
    "browser": true, // Enables browser globals like window and document
    "amd": true, // Enables require() and define() as global variables as per the amd spec.
    "node": true // Enables Node.js global variables and Node.js scoping.
  },
  /* Guest: If we want to customize a plugin: should input that in the plugin list  */
  "plugins": ["simple-import-sort", "@typescript-eslint"],
  "extends": [
    /* Eslint typescript */
    "eslint:recommended",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "rules": {
    // Include .prettierrc.js rules
    "prettier/prettier": ["error", {}, { "usePrettierrc": true }], // Use our .prettierrc file as source

    "simple-import-sort/sort": "error",

    // Targeting Next.js
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",

    /* @typescript-eslint */
    "@typescript-eslint/ban-types": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/ban-ts-comment": "off"
  }
}
